(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{412:function(t,a,s){"use strict";s.r(a);var n=s(2),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"js基础语法相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js基础语法相关"}},[t._v("#")]),t._v(" JS基础语法相关")]),t._v(" "),a("h2",{attrs:{id:"问题1-js的数据类型-存储上的差别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题1-js的数据类型-存储上的差别"}},[t._v("#")]),t._v(" 问题1：js的数据类型，存储上的差别？")]),t._v(" "),a("h3",{attrs:{id:"目标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("ul",[a("li",[t._v("在"),a("code",[t._v("JavaScript")]),t._v("中，我们可以分成两种类型：基本类型、复杂类型")]),t._v(" "),a("li",[t._v("要掌握两种类型的在内存上存储不同！")])]),t._v(" "),a("h3",{attrs:{id:"讲解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲解"}},[t._v("#")]),t._v(" 讲解")]),t._v(" "),a("ul",[a("li",[t._v("基本类型：\n"),a("ul",[a("li",[t._v("基本类型主要为以下7种：Number、String、Boolean、BigInt、Symbol、Null、Undefined、")]),t._v(" "),a("li",[t._v("Null"),a("code",[t._v("类型同样只有一个值，即特殊值")]),t._v("null；null 值表示一个空对象指针，这也是给"),a("code",[t._v("typeof")]),t._v("传一个 "),a("code",[t._v("null")]),t._v(" 会返回 "),a("code",[t._v('"object"')]),t._v(" 的原因")]),t._v(" "),a("li",[a("code",[t._v("undefined")]),t._v(" 值是由 "),a("code",[t._v("null")]),t._v("值派生而来  "),a("code",[t._v("console.log(null == undefined); // true")])]),t._v(" "),a("li",[t._v("Symbol是ES6新出的一种数据类型，这种数据类型的特点就是没有重复的数据，可以作为object的key。")])])]),t._v(" "),a("li",[t._v("引用类型\n"),a("ul",[a("li",[t._v("3种：Object、Array、Function")]),t._v(" "),a("li",[t._v("函数实际上是对象，每个函数都是 "),a("code",[t._v("Function")]),t._v("类型的实例，而 "),a("code",[t._v("Function")]),t._v("也有属性和方法，跟其他引用类型一样")])])]),t._v(" "),a("li",[t._v("存储区别：\n"),a("ul",[a("li",[t._v("基本数据类型存储在"),a("strong",[t._v("栈")]),t._v("中\n"),a("ul",[a("li",[t._v("基本数据类型是直接存储在栈中的简单数据段，占据空间小，属于被频繁使用的数据。")])])]),t._v(" "),a("li",[t._v("引用类型的对象存储于"),a("strong",[t._v("堆")]),t._v("中\n"),a("ul",[a("li",[t._v("引用数据类型是存储在堆内存中，占据空间大。引用数据类型在栈中存储了指针，该指针指向堆中该实体的起始地址，当解释器寻找引用值时，会检索其在栈中的地址，取得地址后从堆中获得实体。")])])])])])]),t._v(" "),a("h3",{attrs:{id:"小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("ul",[a("li",[t._v("记忆：存储区别！")]),t._v(" "),a("li",[t._v("记忆：简单类型中null说明、引用类型里面function的说明！")])]),t._v(" "),a("h2",{attrs:{id:"问题2-和-区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题2-和-区别"}},[t._v("#")]),t._v(" 问题2：== 和 ===区别？")]),t._v(" "),a("h3",{attrs:{id:"目标-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标-2"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("ul",[a("li",[t._v("知道== 和 ===区别核心区别，以及部分比较前隐式转换的规则")])]),t._v(" "),a("h3",{attrs:{id:"讲解-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲解-2"}},[t._v("#")]),t._v(" 讲解")]),t._v(" "),a("ul",[a("li",[t._v("** ==**\n"),a("ul",[a("li",[t._v("在比较中会先进行类型转换，再确定操作数是否相等")]),t._v(" "),a("li",[t._v("如果任一操作数是布尔值，则将其转换为数值再比较是否相等")]),t._v(" "),a("li",[t._v("如果一个操作数是字符串，另一个操作数是数值，则尝试将字符串转换为数值，再比较是否相等")]),t._v(" "),a("li",[t._v("如果一个操作数是对象，另一个操作数不是，则调用对象的 "),a("code",[t._v("valueOf()")]),t._v("方法取得其原始值，再根据前面的规则进行比较 "),a("code",[t._v("let obj = {valueOf:function(){return 1}} let result1 = (obj == 1); // true")])]),t._v(" "),a("li",[a("code",[t._v("let result1 = (null == undefined ); // true")])]),t._v(" "),a("li",[t._v("如果有任一操作数是 "),a("code",[t._v("NaN")]),t._v(" ，则相等操作符返回 "),a("code",[t._v("false")])]),t._v(" "),a("li",[t._v("如果两个操作数都是对象，则比较它们是不是同一个对象。如果两个操作数都指向同一个对象，则相等操作符返回"),a("code",[t._v("true")])])])]),t._v(" "),a("li",[t._v("** ===**\n"),a("ul",[a("li",[t._v("全等操作符由 3 个等于号（ === ）表示，只有两个操作数在不转换的前提下相等才返回 "),a("code",[t._v("true")]),t._v("。即类型相同，值也需相同")]),t._v(" "),a("li",[a("code",[t._v("undefined")]),t._v(" 和 "),a("code",[t._v("null")]),t._v(" 与自身严格相等 "),a("code",[t._v("let result2 = (undefined === undefined) //true")])])])])]),t._v(" "),a("h3",{attrs:{id:"小结-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-2"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("p",[a("strong",[t._v("==")])]),t._v(" "),a("ul",[a("li",[t._v("两个都为简单类型，字符串和布尔值都会转换成数值，再比较")]),t._v(" "),a("li",[t._v("简单类型与引用类型比较，对象转化成其原始类型的值，再比较")]),t._v(" "),a("li",[t._v("两个都为引用类型，则比较它们是否指向同一个对象")]),t._v(" "),a("li",[t._v("null 和 undefined 相等")]),t._v(" "),a("li",[t._v("存在 NaN 则返回 false")])]),t._v(" "),a("p",[a("strong",[t._v("===")])]),t._v(" "),a("ul",[a("li",[t._v("如果数据类型不一样，直接false；")]),t._v(" "),a("li",[t._v("特别："),a("code",[t._v("let result2 = (undefined === undefined) //true")])])]),t._v(" "),a("h2",{attrs:{id:"问题3-深拷贝浅拷贝的区别-如何实现一个深拷贝"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题3-深拷贝浅拷贝的区别-如何实现一个深拷贝"}},[t._v("#")]),t._v(" 问题3：深拷贝浅拷贝的区别？如何实现一个深拷贝？")]),t._v(" "),a("h3",{attrs:{id:"目标-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标-3"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("ul",[a("li",[t._v("能说出深拷贝浅拷贝的定义区别")]),t._v(" "),a("li",[t._v("会实现深拷贝")])]),t._v(" "),a("h3",{attrs:{id:"讲解-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲解-3"}},[t._v("#")]),t._v(" 讲解")]),t._v(" "),a("p",[t._v("首先浅拷贝和深拷贝只针对引用类型")]),t._v(" "),a("ul",[a("li",[t._v("浅拷贝： （对象中的简单类型拷贝值，复杂类型拷贝的是地址（简单理解： 如果是单层对象，没问题，如果有多层就有问题)")]),t._v(" "),a("li",[t._v("）\n"),a("ul",[a("li",[t._v("浅拷贝，指的是创建新的数据，这个数据有着原始数据属性值的一份精确拷贝.")]),t._v(" "),a("li",[t._v("如果属性是基本类型，拷贝的就是基本类型的值。如果属性是引用类型，拷贝的就是内存地址；即浅拷贝是拷贝一层，深层次的引用类型则共享内存地址")])])]),t._v(" "),a("li",[t._v("深度拷贝\n"),a("ul",[a("li",[t._v("对比浅拷贝，如果属性是引用类型，深拷贝在内存中开辟一块新的地址用于存放复制的对象，两个对象属性完成相同，但是对应两个不同的地址，修改一个对象的属性，不会改变另一个对象的属性！")])])]),t._v(" "),a("li",[t._v("实现深度拷贝：手写递归")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("deepCopy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("newObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("oldObj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//（新数据，被拷贝数据）")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" oldObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果数据类型是数组，必须写在最上面，")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因为 ( [1,2] instanceof Object === true)")]),t._v("\n            newObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("deepCopy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("oldObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果数据是对象类型")]),t._v("\n            newObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("deepCopy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("oldObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//数据是基本数据类型")]),t._v("\n            newObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" oldObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" newObj\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"小结-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-3"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("ul",[a("li",[t._v("对于一个引用数据类型，实现拷贝第一层，就是浅拷贝，实现每层键值对拷贝，就是深度拷贝；")]),t._v(" "),a("li",[t._v("要会手写递归实现深度拷贝！")])]),t._v(" "),a("h2",{attrs:{id:"问题4-什么是闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题4-什么是闭包"}},[t._v("#")]),t._v(" 问题4：什么是闭包？")]),t._v(" "),a("h3",{attrs:{id:"目标-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标-4"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("ul",[a("li",[t._v("知道什么情况下是闭包，闭包会有什么特点？")])]),t._v(" "),a("h3",{attrs:{id:"讲解-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲解-4"}},[t._v("#")]),t._v(" 讲解")]),t._v(" "),a("ul",[a("li",[t._v("闭包让你可以在一个内层函数中访问到其外层函数的作用域")]),t._v(" "),a("li",[t._v("基本形式：内存函数使用了外层函数的变量，构成闭包！")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2022/png/22014993/1657202428528-5615b3cd-3f8e-45fa-93c5-5f93e9d938ae.png#clientId=u4afc02fb-6a9b-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=154&id=uf0846fb6&name=image.png&originHeight=261&originWidth=962&originalType=binary&ratio=1&rotation=0&showTitle=false&size=65315&status=done&style=none&taskId=u532f4497-8eef-4702-b0b6-3b516d4afdb&title=&width=566",alt:"image.png"}})]),t._v(" "),a("ul",[a("li",[t._v("特点：一般函数的词法环境在函数返回后就被销毁，但是闭包会保存对创建时所在词法环境的引用，即便创建时所在的执行上下文被销毁，但创建时所在词法环境依然存在，以达到延长变量的生命周期的目的")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fontSize "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" size "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'px'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" fn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数执行完了，")]),t._v("\n\n\n    document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'btn'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onclick "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 但是点击的时候，50的设置值还在，50随着fn的函数一起留在在内存上！")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 页面不关闭，50这个数据就一直停留在内存上！")]),t._v("\n")])])]),a("h3",{attrs:{id:"小结-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-4"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("ul",[a("li",[t._v("形式：内存函数使用了外层函数的变量！")]),t._v(" "),a("li",[t._v("特点：外层函数执行完后，由于内存函数使用了外层的变量，该变量不会被销毁，而是停留在内存上！")])]),t._v(" "),a("h2",{attrs:{id:"问题5-什么是作用域链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题5-什么是作用域链"}},[t._v("#")]),t._v(" 问题5：什么是作用域链？")]),t._v(" "),a("h3",{attrs:{id:"目标-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标-5"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("ul",[a("li",[t._v("知道什么是作用域链，有什么作用？")])]),t._v(" "),a("h3",{attrs:{id:"讲解-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲解-5"}},[t._v("#")]),t._v(" 讲解")]),t._v(" "),a("ul",[a("li",[t._v("当在"),a("code",[t._v("Javascript")]),t._v("中使用一个变量的时候，首先"),a("code",[t._v("Javascript")]),t._v("引擎会尝试在当前作用域下去寻找该变量，如果没找到，再到它的上层作用域寻找，以此类推直到找到该变量或是已经到了全局作用域")]),t._v(" "),a("li",[t._v("如果在全局作用域里仍然找不到该变量，它就会在全局范围内隐式声明该变量(非严格模式下)或是直接报错")]),t._v(" "),a("li",[t._v("词法作用域：词法作用域，又叫静态作用域，变量被创建时就确定好了，而非执行阶段确定的。也就是说我们写好代码时它的作用域就确定了，"),a("code",[t._v("JavaScript")]),t._v(" 遵循的就是词法作用域！")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2022/png/22014993/1657202469539-7506e2fc-7c55-4bc3-872b-0665d57d37f7.png#clientId=u4afc02fb-6a9b-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=388&id=udbd431c7&name=image.png&originHeight=663&originWidth=1062&originalType=binary&ratio=1&rotation=0&showTitle=false&size=134045&status=done&style=none&taskId=u3dd22db5-eb8f-4325-94dc-6dffd763d3b&title=&width=621",alt:"image.png"}})]),t._v(" "),a("ul",[a("li",[t._v("由于"),a("code",[t._v("JavaScript")]),t._v("遵循词法作用域，"),a("strong",[t._v("相同层级")]),t._v("的 "),a("code",[t._v("foo")]),t._v(" 和 "),a("code",[t._v("bar")]),t._v(" 就没有办法访问到彼此块作用域中的变量，所以输出2")])]),t._v(" "),a("h3",{attrs:{id:"小结-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-5"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("ul",[a("li",[t._v("先在当前作用域寻找该变量，找不到就往外层，直到全局作用域，")]),t._v(" "),a("li",[t._v("再找不到就报错！")])]),t._v(" "),a("h2",{attrs:{id:"问题6-什么是原型链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题6-什么是原型链"}},[t._v("#")]),t._v(" 问题6：什么是原型链 ?")]),t._v(" "),a("h3",{attrs:{id:"目标-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标-6"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("ul",[a("li",[t._v("知道什么是原型链，原型链的意义是什么！")])]),t._v(" "),a("h3",{attrs:{id:"讲解-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲解-6"}},[t._v("#")]),t._v(" 讲解")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("JavaScript")]),t._v(" 常被描述为一种基于原型的语言——每个对象拥有一个原型对象")]),t._v(" "),a("li",[t._v("当试图访问一个对象的属性时，它不仅仅在该对象上搜寻，还会搜寻该对象的原型，以及该对象的原型的原型，依次层层向上搜索，直到找到一个名字匹配的属性或到达原型链的末尾")]),t._v(" "),a("li",[t._v("准确地说，这些属性和方法定义在Object的构造器函数（constructor functions）之上的"),a("code",[t._v("prototype")]),t._v("属性上，而非实例对象本身")]),t._v(" "),a("li",[t._v("代码及图示")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Some")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Some")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fn1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我是  Some.prototype  的上的方法"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fn2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我是  Object.prototype  的上的方法"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" test "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Some")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"测试实例化test"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ntest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ntest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("方法的执行，都是顺序对象及原型对象这个链找下，直到匹配到位！")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2022/png/22014993/1657202500762-db455a1f-4c8e-47ed-aeae-602d4b2bc0c5.png#clientId=u4afc02fb-6a9b-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=379&id=ua7435340&name=image.png&originHeight=611&originWidth=784&originalType=binary&ratio=1&rotation=0&showTitle=false&size=139725&status=done&style=none&taskId=u5796891d-6b07-49d5-b3c9-21e39515fed&title=&width=486.20001220703125",alt:"image.png"}})]),t._v(" "),a("h2",{attrs:{id:"问题7-关于this指向的理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题7-关于this指向的理解"}},[t._v("#")]),t._v(" 问题7：关于this指向的理解？")]),t._v(" "),a("h3",{attrs:{id:"目标-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标-7"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("ul",[a("li",[t._v("知道不同的调用函数的方式，内部的this指向是不同的！")])]),t._v(" "),a("h3",{attrs:{id:"讲解-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲解-7"}},[t._v("#")]),t._v(" 讲解")]),t._v(" "),a("ul",[a("li",[t._v("在绝大多数情况下，函数的调用方式决定了 "),a("code",[t._v("this")]),t._v(" 的值（运行时绑定）")]),t._v(" "),a("li",[t._v("代码：")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// window;")]),t._v("\n\n\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#btn"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onclick "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// dom节点")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {}")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Math")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newfn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("newfn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// []")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" f "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// f实例化对象")]),t._v("\n")])])]),a("h3",{attrs:{id:"小结-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-6"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("ul",[a("li",[t._v("简单来说：就是谁调用就是谁！")])]),t._v(" "),a("h2",{attrs:{id:"问题8-事件委托的实现原理是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题8-事件委托的实现原理是什么"}},[t._v("#")]),t._v(" 问题8：事件委托的实现原理是什么？")]),t._v(" "),a("h3",{attrs:{id:"目标-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标-8"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("ul",[a("li",[t._v("能够描述事件委托背后的实现原理")])]),t._v(" "),a("h3",{attrs:{id:"讲解-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲解-8"}},[t._v("#")]),t._v(" 讲解")]),t._v(" "),a("ul",[a("li",[t._v("原理：因为事件默认是在冒泡阶段执行的！")]),t._v(" "),a("li",[t._v("比如：当子元素被用户点击了，父级元素设置点击事件的执行函数，那么点击子元素，父级元素的执行函数会被执行！")]),t._v(" "),a("li",[t._v("应用：如果有很多子元素都需要注册同一种事件类型，那么该事件的执行函数可以委托给父级，也就是注册给父级；\n"),a("ul",[a("li",[t._v("优点：节省内存、实现动态元素的事件注册")]),t._v(" "),a("li",[t._v("缺点：所有的子元素的业务都需要写在一个函数内部，执行起来时，耗费性能！")])])])]),t._v(" "),a("h3",{attrs:{id:"小结-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-7"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("ul",[a("li",[t._v("原理：事件默认是在冒泡阶段执行的！")]),t._v(" "),a("li",[t._v("优点：节省内存、实现动态元素的事件注册")]),t._v(" "),a("li",[t._v("缺点：所有的子元素的业务都需要写在一个函数内部，执行起来时，耗费性能！")])]),t._v(" "),a("h2",{attrs:{id:"问题9-typeof-与-instanceof-区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题9-typeof-与-instanceof-区别"}},[t._v("#")]),t._v(" 问题9：typeof 与 instanceof 区别？")]),t._v(" "),a("h3",{attrs:{id:"小结-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-8"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("ul",[a("li",[t._v("知道typeof、instanceof 的用法及区别")])]),t._v(" "),a("h3",{attrs:{id:"讲解-9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲解-9"}},[t._v("#")]),t._v(" 讲解：")]),t._v(" "),a("ul",[a("li",[t._v("typeof：\n"),a("ul",[a("li",[t._v("前6个都是基础数据类型。虽然"),a("code",[t._v("typeof null")]),t._v("为"),a("code",[t._v("object")]),t._v("，但这只是"),a("code",[t._v("JavaScript")]),t._v(" 存在的一个悠久 "),a("code",[t._v("Bug")]),t._v("，不代表"),a("code",[t._v("null")]),t._v("就是引用数据类型，并且"),a("code",[t._v("null")]),t._v("本身也不是对象")]),t._v(" "),a("li",[t._v("所以，"),a("code",[t._v("null")]),t._v("在 "),a("code",[t._v("typeof")]),t._v("之后返回的是有问题的结果，不能作为判断"),a("code",[t._v("null")]),t._v("的方法。如果你需要在 "),a("code",[t._v("if")]),t._v(" 语句中判断是否为 "),a("code",[t._v("null")]),t._v("，直接通过"),a("code",[t._v("===null")]),t._v("来判断就好")])])])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'number'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'string'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'undefined'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'boolean'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'symbol'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'object'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'object'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'object'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" console "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'object'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'function'")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("instanceof")]),t._v(" 运算符用于检测构造函数的 "),a("code",[t._v("prototype")]),t._v(" 属性是否出现在某个实例对象的原型链上")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义构建函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("Car")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" benz "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Car")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nbenz "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Car")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" car "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xxx'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ncar "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xxx'")]),t._v("\nstr "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),a("ul",[a("li",[t._v("关于"),a("code",[t._v("instanceof")]),t._v("的实现原理，可以参考下面：")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("myInstanceof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("left"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" right")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里先用typeof来判断基础数据类型，如果是，直接返回false")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" left "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'object'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" left "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// getProtypeOf是Object对象自带的API，能够拿到参数的原型对象")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" proto "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("left"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("                  \n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("proto "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("proto "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" right"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//找到相同原型对象，返回true")]),t._v("\n        proto "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("proto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"小结-9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-9"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("ul",[a("li",[t._v("typeof不是很方便判断引用数据类型")]),t._v(" "),a("li",[t._v("instanceof：\n"),a("ul",[a("li",[t._v("某对象是否为某构造函数类型的实例化对象")]),t._v(" "),a("li",[t._v("某对象是否继承了某构造函数的原型对象")])])])]),t._v(" "),a("h2",{attrs:{id:"问题10-new操作符具体干了什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题10-new操作符具体干了什么"}},[t._v("#")]),t._v(" 问题10：new操作符具体干了什么？")]),t._v(" "),a("h3",{attrs:{id:"目标-9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标-9"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("ul",[a("li",[t._v("知道new这个关键字配合构造函数进行实例化的时候，做了什么")])]),t._v(" "),a("h3",{attrs:{id:"讲解-10"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲解-10"}},[t._v("#")]),t._v(" 讲解")]),t._v(" "),a("ul",[a("li",[t._v("例子")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sayName")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" person1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Tom'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Person {name: "Tom", age: 20}')]),t._v("\nperson1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'Tom'")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("new")]),t._v(" 通过构造函数 "),a("code",[t._v("Person")]),t._v(" 创建出来的实例可以访问到构造函数中的属性")]),t._v(" "),a("li",[a("code",[t._v("new")]),t._v(" 通过构造函数 "),a("code",[t._v("Person")]),t._v(" 创建出来的实例可以访问到构造函数原型链中的属性（即实例与构造函数通过原型链连接了起来）")]),t._v(" "),a("li",[t._v("理解代码：")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        age\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sayName")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// new 做的事情：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" person2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Tom'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1、创建对象")]),t._v("\nperson2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2、原型对象关联")]),t._v("\n")])])]),a("h3",{attrs:{id:"小结-10"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-10"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("ul",[a("li",[t._v("new"),a("code",[t._v("通过构造函数")]),t._v("Person` 创建出来的实例可以访问到构造函数中的属性")]),t._v(" "),a("li",[a("code",[t._v("new")]),t._v(" 通过构造函数 "),a("code",[t._v("Person")]),t._v(" 创建出来的实例可以访问到构造函数原型链中的属性（即实例与构造函数通过原型链连接了起来）")])]),t._v(" "),a("h2",{attrs:{id:"问题11-let-const和var的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题11-let-const和var的区别"}},[t._v("#")]),t._v(" 问题11: let, const和var的区别?")]),t._v(" "),a("h3",{attrs:{id:"目标-10"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标-10"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("ul",[a("li",[t._v("掌握这些声明变量关键字区别")])]),t._v(" "),a("h3",{attrs:{id:"讲解-11"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲解-11"}},[t._v("#")]),t._v(" 讲解")]),t._v(" "),a("ol",[a("li",[t._v("ES6中引入let和const以及块级作用域, 目的是为了修复以前变量提升的问题")]),t._v(" "),a("li",[t._v("let和const在同一作用域下, 变量名不可以重复, 而var可以")]),t._v(" "),a("li",[t._v("let和const在块级作用域下, 而var在function函数作用域下")]),t._v(" "),a("li",[t._v("let和const有暂时性死区, 而var有变量提升")]),t._v(" "),a("li",[t._v("let和const的全局变量不会挂载到window上, 而var定义的会\n| 概念 | let 和 const | var |\n| --- | --- | --- |\n| 重复声明 | X | √ |\n| 作用域 | 块级作用域 | 函数作用域 |\n| 变量提升 | 暂时性死区 | √ |\n| 挂载到window | X | √ |")])]),t._v(" "),a("h3",{attrs:{id:"小结-11"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-11"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("blockquote",[a("p",[t._v("逐字稿, 可以理解着梳理")])]),t._v(" "),a("p",[t._v("取表格第一列概念, 每个开头第一个字, 组成口诀: 重作变挂\n重: 重复声明区别\n作: 作用域区别\n变: 变量提升区别\n挂: 变量是否挂载到window区别")]),t._v(" "),a("h3",{attrs:{id:"参考文献"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文献"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"http://fanyouf.gitee.io/interview/es6/var_let_const.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://fanyouf.gitee.io/interview/es6/var_let_const.html"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("前端面试宝典V4.0--2022.1")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/let",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://es6.ruanyifeng.com/#docs/let"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("极客时间->浏览器的工作原理与实践")]),t._v(" "),a("li",[t._v("mdn: "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/let",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/let"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"问题12-箭头函数和function函数区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题12-箭头函数和function函数区别"}},[t._v("#")]),t._v(" 问题12: 箭头函数和function函数区别?")]),t._v(" "),a("h3",{attrs:{id:"目标-11"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标-11"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("ul",[a("li",[t._v("掌握箭头函数和function函数区别")])]),t._v(" "),a("h3",{attrs:{id:"讲解-12"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲解-12"}},[t._v("#")]),t._v(" 讲解")]),t._v(" "),a("ol",[a("li",[t._v("箭头函数无自己this值, 值依赖父级函数作用域this的值")]),t._v(" "),a("li",[t._v("箭头函数不能够使用 arguments 对象, 而使用剩余参数运算符")]),t._v(" "),a("li",[t._v("箭头函数不能用作构造函数, 不能被new")])]),t._v(" "),a("h3",{attrs:{id:"小结-12"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-12"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("blockquote",[a("p",[t._v("逐字稿, 可以理解着梳理")])]),t._v(" "),a("p",[t._v("箭头函数常用做回调函数使用, 它无自己的this, 无arguments对象, 不能被new调用")]),t._v(" "),a("h3",{attrs:{id:"参考文献-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文献-2"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),a("ol",[a("li",[t._v("前端面试宝典V4.0--2022.1")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/function#%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://es6.ruanyifeng.com/#docs/function#箭头函数"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("极客时间->浏览器工作原理与实践")])]),t._v(" "),a("h2",{attrs:{id:"问题13-请实现冒泡排序代码编写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题13-请实现冒泡排序代码编写"}},[t._v("#")]),t._v(" 问题13: 请实现冒泡排序代码编写")]),t._v(" "),a("h3",{attrs:{id:"目标-12"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标-12"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("ul",[a("li",[t._v("掌握冒泡排序基础写法")]),t._v(" "),a("li",[t._v("了解冒泡排序进阶写法")])]),t._v(" "),a("h3",{attrs:{id:"讲解-13"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲解-13"}},[t._v("#")]),t._v(" 讲解")]),t._v(" "),a("ol",[a("li",[t._v("基础写法(掌握这个即可)")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("进阶写法")])]),t._v(" "),a("blockquote",[a("p",[t._v("从小到达, 只有左侧大于右侧才交换, 外层跑一次, 就把最大的交换到了数组右侧, 所以下次i++后内层循环可以少比较i位, 所以-i")]),t._v(" "),a("p",[t._v("而flag作用, 如果发现内存for跑了一圈, 没有交换, 证明数组里顺序已经从小到大, 外层循环无需再执行")])]),t._v(" "),a("h3",{attrs:{id:"小结-13"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-13"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("blockquote",[a("p",[t._v("逐字稿, 可以理解着梳理")])]),t._v(" "),a("p",[t._v("如果口述最基础的思路:")]),t._v(" "),a("ol",[a("li",[t._v("外层for控制循环比较次数")]),t._v(" "),a("li",[t._v("里层for控制遍历元素的下标, 每次拿到j和j+1换出值对比, 然后进入if就交换在数组里元素位置")])]),t._v(" "),a("h3",{attrs:{id:"参考文献-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文献-3"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),a("ul",[a("li",[t._v("无 (自己手写)")])]),t._v(" "),a("h2",{attrs:{id:"问题14-请实现数组快速去重编写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题14-请实现数组快速去重编写"}},[t._v("#")]),t._v(" 问题14: 请实现数组快速去重编写")]),t._v(" "),a("h3",{attrs:{id:"目标-13"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标-13"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("ul",[a("li",[t._v("掌握常用的数组去重的方法")]),t._v(" "),a("li",[t._v("还要会根据业务的不同在此基础上修改")])]),t._v(" "),a("h3",{attrs:{id:"讲解-14"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲解-14"}},[t._v("#")]),t._v(" 讲解")]),t._v(" "),a("ol",[a("li",[t._v("这里有3种常用的可以看看")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.使用 es6 set 方法 [...new Set(arr)]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// let arr = [1, 2, 3, 4, 3, 2, 3, 4, 6, 7, 6]; ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// let unique = (arr) => [...new Set(arr)]; ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(unique(arr)); // [1, 2, 3, 4, 6, 7]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2、利用 filter 和indexOf, 后面的值发现前面能查到, 下标不统一证明存在过, 不被filter收集")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// let arr = [1, 2, 3, 4, 3, 2, 3, 4, 6, 7, 6]; ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// let unique = (arr) => {")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     return arr.filter((item, index) => {")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//         return arr.indexOf(item) === index;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     })")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }; ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(unique(arr)) // [1, 2, 3, 4, 6, 7]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 6、利用 Map 数据结构去重")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// let arr = [1, 2, 3, 4, 3, 2, 3, 4, 6, 7, 6]; ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// let unique = (arr) => {")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     let seen = new Map(); ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     return arr.filter((item) => {")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//         // 判断此值在map对象里不存在, 然后给map里添加此元素, 返回true, 被filter收集")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//         // 如果map里存在了has方法原地为true, !true返回false, 不让filter收集")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//         return !seen.has(item) && seen.set(item, 1);")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     });")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }; ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(unique(arr)) // [1, 2, 3, 4, 6, 7]")]),t._v("\n")])])]),a("h3",{attrs:{id:"小结-14"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-14"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("blockquote",[a("p",[t._v("逐字稿, 可以理解着梳理")])]),t._v(" "),a("p",[t._v("如果口述最基础的思路:\n方式1: 把数组传入到new Set集合中, Set自带元素值去重效果, 再把Set转成数组即可\n方式2: 用filter配合indexOf方法, 用遍历的索引和查找的所以比较, 如果相等的则被filter内收集, 不相等证明在前面找到过不让filter收集\n方式3: 用filter配合map集合, map集合key为数组的值, value为1标记, 每次遍历判断map上有无, 无则让filter收集遍历的此元素值")]),t._v(" "),a("h3",{attrs:{id:"参考文献-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文献-4"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),a("ol",[a("li",[t._v("前端面试宝典V4.0--2022.1.pdf")])]),t._v(" "),a("h2",{attrs:{id:"问题15-什么是promise"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题15-什么是promise"}},[t._v("#")]),t._v(" 问题15: 什么是Promise?")]),t._v(" "),a("h3",{attrs:{id:"目标-14"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标-14"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("ul",[a("li",[t._v("介绍Promise特点")]),t._v(" "),a("li",[t._v("介绍Promise优缺点")])]),t._v(" "),a("h3",{attrs:{id:"讲解-15"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲解-15"}},[t._v("#")]),t._v(" 讲解")]),t._v(" "),a("ol",[a("li",[t._v("Promise译为承诺，是异步编程的一种解决方案, 承诺在未来有个成功/失败的结果回来")]),t._v(" "),a("li",[t._v("它是一个对象, 也是一个容器, 内部一般是一个异步代码, 使用Promise提供的 API，在未来接收成功/失败的结果")]),t._v(" "),a("li",[t._v("Promise的出现为了使用链式调用来解决回调地狱问题的, 让异步流程处理的贴近线性结构")]),t._v(" "),a("li",[t._v("而且Promise本身是同步的执行对象内代码, then和catch是的回调函数是异步的, 被设计成微任务")]),t._v(" "),a("li",[t._v("而Promise内为了保证异步任务结果回来后延迟调用then/catch, 在Promise内维持着三种状态标记")])]),t._v(" "),a("ul",[a("li",[t._v("等待中 (pending)")]),t._v(" "),a("li",[t._v("成功 (fulfilled) -> 也叫兑现")]),t._v(" "),a("li",[t._v("失败 (rejected) -> 也叫拒绝")])]),t._v(" "),a("ol",{attrs:{start:"6"}},[a("li",[t._v("当Promise对象内提供的resolve和reject触发时, 流程如下")])]),t._v(" "),a("ul",[a("li",[t._v("resolve() 调用后 => 内部状态为 fulfilled => 导致then()小括号里的回调函数执行")]),t._v(" "),a("li",[t._v("reject()    调用后 => 内部状态为 rejected => 导致catch()小括号里的回调函数执行")])]),t._v(" "),a("ol",{attrs:{start:"7"}},[a("li",[t._v("Promise优点:")])]),t._v(" "),a("ul",[a("li",[t._v("让回调函数变成链式调用, 流程更清楚")]),t._v(" "),a("li",[t._v("它有一些强大的方法, 比如all和race方法, 可等多个异步一起按顺序接收回来结果")])]),t._v(" "),a("ol",{attrs:{start:"8"}},[a("li",[t._v("Promise缺点:")])]),t._v(" "),a("ul",[a("li",[t._v("对链式调用要非常熟悉, 编写难度高")]),t._v(" "),a("li",[t._v("一旦Promise启动, 无法取消, 无法追踪进度")]),t._v(" "),a("li",[t._v("一旦有结果, 状态凝固, 无法再改变, 除非重新创建Promise对象")])]),t._v(" "),a("h3",{attrs:{id:"小结-15"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-15"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("blockquote",[a("p",[t._v("逐字稿, 可以理解着梳理")])]),t._v(" "),a("p",[t._v("方面1: 概念\nPromise是一个对象, 它作为容器也是一个承诺，承诺在未来内部异步代码, 有个成功/失败的结果回来, 而且用它的链式调用特点可以解决回调地狱的问题\n如果还能说继续↓\n方面2: 流程\nPromise内部提供resolve和reject2个函数, 有3种状态")]),t._v(" "),a("ul",[a("li",[t._v("resolve() 调用后 => 内部状态为 fulfilled => 导致then()小括号里的回调函数执行")]),t._v(" "),a("li",[t._v("reject()    调用后 => 内部状态为 rejected => 导致catch()小括号里的回调函数执行")])]),t._v(" "),a("p",[t._v("如果还能说继续↓\n方面3: 优缺点\nPromise优点:")]),t._v(" "),a("ul",[a("li",[t._v("让回调函数变成链式调用, 流程更清楚")]),t._v(" "),a("li",[t._v("它有一些强大的方法, 比如all和race方法, 可等多个异步一起按顺序接收回来结果")])]),t._v(" "),a("p",[t._v("Promise缺点:")]),t._v(" "),a("ul",[a("li",[t._v("对链式调用要非常熟悉, 编写难度高")]),t._v(" "),a("li",[t._v("一旦Promise启动, 无法取消, 无法追踪进度")]),t._v(" "),a("li",[t._v("一旦有结果, 状态凝固, 无法再改变, 除非重新创建Promise对象")])]),t._v(" "),a("h3",{attrs:{id:"参考文献-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文献-5"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"http://fanyouf.gitee.io/interview/es6/promise.html#%E4%B8%80%E3%80%81%E4%BB%8B%E7%BB%8D",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://fanyouf.gitee.io/interview/es6/promise.html#一、介绍"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("你不知道的JavaScript")]),t._v(" "),a("li",[t._v("极客时间->浏览器的工作原理与实践")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/promise",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://es6.ruanyifeng.com/#docs/promise"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.csdn.net/tags/NtjaIg0sNTUyNjAtYmxvZwO0O0OO0O0O.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.csdn.net/tags/NtjaIg0sNTUyNjAtYmxvZwO0O0OO0O0O.html"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"问题16-请仿写promise实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题16-请仿写promise实现"}},[t._v("#")]),t._v(" 问题16: 请仿写Promise实现")]),t._v(" "),a("h3",{attrs:{id:"目标-15"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标-15"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("ul",[a("li",[t._v("了解Promise内部实现的大概过程")])]),t._v(" "),a("h3",{attrs:{id:"讲解-16"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲解-16"}},[t._v("#")]),t._v(" 讲解")]),t._v(" "),a("ol",[a("li",[t._v("代码如下: 按照序号阅读, 和仿写5-10遍")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果是要自己模拟一个最基本的")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 真正要写全, 代码很长很多, 可以自行百度(有很多)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里只模拟个最基础的成功回调")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 定义Promise函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyPromise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callBackFnArr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2.用来装then小括号里的回调函数, 一会儿回调")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("resolve")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. 定义resolve方法, 方法被调用执行这里目的就是为了让then函数执行")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4. 因为Promise源码是C++写的, 这里只能用setTimeout模拟下延迟, 确保then先被添加后, 再当前resolve调用后再执行then的回调函数")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callBackFnArr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("v")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("v")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5. 给new Promise对象里回调函数, 传递过去resolve方法")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 6. 实现Promise构造函数(对象)的实例then方法, 添加到原型对象上可以让所有Promise对象共享")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyPromise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("then")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("thenFn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callBackFnArr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thenFn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 7. 把外面调用then时传入的回调函数先装入数组中, 等待上面resolve函数调用时, 回调then()小括号里的回调函数执行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 8. 开始模拟使用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" pro "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyPromise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\npro"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("result")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"小结-16"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-16"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("blockquote",[a("p",[t._v("逐字稿, 可以理解着梳理")])]),t._v(" "),a("p",[t._v("如果口述最基础的思路:\n函数内准备数组装then小括号里的回调函数, 再准备resolve方法, 等待此方法调用用, 用定时器模拟延迟执行数组里每个回调函数\n再给Promise构造函数上添加then方法, 把收到的回调函数装入数组中, 等待resolve调用执行")]),t._v(" "),a("h3",{attrs:{id:"参考文献-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文献-6"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),a("ol",[a("li",[t._v("面试宝典V4.0 (2022版)")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.cn/post/7112380113265623047",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://juejin.cn/post/7112380113265623047"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"问题17-请仿写promise-all实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题17-请仿写promise-all实现"}},[t._v("#")]),t._v(" 问题17: 请仿写Promise.all实现")]),t._v(" "),a("h3",{attrs:{id:"目标-16"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标-16"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("ul",[a("li",[t._v("了解Promise.all内部实现的大体过程")]),t._v(" "),a("li",[t._v("在笔试时/面试时可以仿写/说出")])]),t._v(" "),a("h3",{attrs:{id:"讲解-17"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲解-17"}},[t._v("#")]),t._v(" 讲解")]),t._v(" "),a("ol",[a("li",[t._v("代码如下,先读懂, 然后仿写5-10遍")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("myAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" index "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" resArr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 申请空数组, 长度为外面传入Promise数组的个数")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("result")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 取出每个小Promise对象等待结果")]),t._v("\n                resArr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因为用的i, 所以有块作用域, 保证i的值和p顺序对应")]),t._v("\n                index"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当本次执行后和所有的Promise个数对比, 相等, 就把最后resArr数组返回")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resArr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("catch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" p "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" p2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("myAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"小结-17"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-17"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("blockquote",[a("p",[t._v("逐字稿, 可以理解着梳理")])]),t._v(" "),a("p",[t._v("如果口述最基础的思路:\n定义all函数后, 接收外部传入小Promise对象的数组, 并返回一个自定义的大Promise对象完成合并\n然后在大Promise对象内, 准备结果数组和完成的计数器index\n在大Promise对象内, 继续遍历每个小Promise对象的then和catch等待结果\n成功的, 按照i索引放入结果数组里, 并计数器+1判断是否为最后一个, 为最后一个直接用大Promise对象的resolve传结果数组出去\n有一个小Promise对象走失败, 直接调用大Promise对象的reject导致外部失败即可")]),t._v(" "),a("h3",{attrs:{id:"参考文献-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文献-7"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),a("ol",[a("li",[t._v("无")]),t._v(" "),a("li",[t._v("自己手写")])]),t._v(" "),a("h2",{attrs:{id:"问题18-什么是函数式编程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题18-什么是函数式编程"}},[t._v("#")]),t._v(" 问题18: 什么是函数式编程?")]),t._v(" "),a("h3",{attrs:{id:"目标-17"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标-17"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("ul",[a("li",[t._v("了解什么是函数式编程")]),t._v(" "),a("li",[t._v("了解函数式编程的优缺点")])]),t._v(" "),a("h3",{attrs:{id:"讲解-18"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲解-18"}},[t._v("#")]),t._v(" 讲解")]),t._v(" "),a("ol",[a("li",[t._v("面向函数编程与面向过程编程, 和面向对象编程都是一种编程规范方式(思想)")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 命令式编程")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" array "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数式方式")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("num")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("强调将计算过程分解成可复用的函数，典型例子就是"),a("code",[t._v("map")]),t._v("方法和"),a("code",[t._v("reduce")]),t._v("方法")]),t._v(" "),a("li",[t._v("函数就是一个管道（pipe）。这头进去一个值，那头就会出来一个新的值，没有其他作用")]),t._v(" "),a("li",[t._v("强调函数可以作为实参, 或者作为返回值参与到代码执行的流程中去")]),t._v(" "),a("li",[t._v("优点: 可以复用, 可以任意组合, 减低耦合性")]),t._v(" "),a("li",[t._v("缺点:")])]),t._v(" "),a("ul",[a("li",[t._v("资源占用每个函数都要开一个执行上下文(局部作用域)在内存中")]),t._v(" "),a("li",[t._v("代码不易于阅读")])]),t._v(" "),a("h3",{attrs:{id:"小结-18"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-18"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("blockquote",[a("p",[t._v("逐字稿, 可以理解着梳理")])]),t._v(" "),a("p",[t._v("函数式编程和面向过程和对象一样是一种新的编程思想, 就是把计算过程分成可复用的函数, 定义好参数, 并在函数内返回结果")]),t._v(" "),a("h3",{attrs:{id:"参考文献-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文献-8"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://lamphc.github.io/fe-up/#/JavaScript/functional_programming",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://lamphc.github.io/fe-up/#/JavaScript/functional_programming"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.cn/post/6844904153823592461",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://juejin.cn/post/6844904153823592461"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.cn/post/6844904061818142728",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://juejin.cn/post/6844904061818142728"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.cn/post/6923758566323159048",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://juejin.cn/post/6923758566323159048"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2017/02/fp-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.ruanyifeng.com/blog/2017/02/fp-tutorial.html"),a("OutboundLink")],1),t._v("  (推荐看这个)")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/502056464",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://zhuanlan.zhihu.com/p/502056464"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/1016959663602400/1017328525009056",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.liaoxuefeng.com/wiki/1016959663602400/1017328525009056"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"问题19-什么是函数柯里化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题19-什么是函数柯里化"}},[t._v("#")]),t._v(" 问题19: 什么是函数柯里化?")]),t._v(" "),a("h3",{attrs:{id:"目标-18"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标-18"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("ul",[a("li",[t._v("了解函数可里化目的")]),t._v(" "),a("li",[t._v("了解如何编写")])]),t._v(" "),a("h3",{attrs:{id:"讲解-19"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲解-19"}},[t._v("#")]),t._v(" 讲解")]),t._v(" "),a("ol",[a("li",[t._v("柯里化是把一个多参数函数转化成一个嵌套的一元函数的过程")]),t._v(" "),a("li",[t._v("目的是让纯函数更纯，每次接受一个参数，松散解耦")]),t._v(" "),a("li",[t._v("代码体现(基础)")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" c\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 改装成可里化函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sumX")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("c")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" c\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sumX")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 保证每个函数只接收一个参数")]),t._v("\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[t._v("通用可里化(进阶, 较难)")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 但是上面的函数只能算3个数的和, 体现不出函数可里化威力, 改装下")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sumY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curriedFn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数.length拿到的是形参个数")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回到myfn()调用处, 被调用继续执行curriedFn方法, 并把参数的值拼接成一个数组继续传入, 注意先执行args.concat拼接数组, 再...展开所有实际值传入")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curriedFn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最后都收集好了, 执行一次这里, 返回4个数的值, 再逐层返回到最外面")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" z"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" z "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myfn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sumY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// myfn就是curriedFn函数")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("myfn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"小结-19"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-19"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("blockquote",[a("p",[t._v("逐字稿, 可以理解着梳理")])]),t._v(" "),a("p",[t._v("柯里化是把一个多参数函数转化成一个嵌套的一元函数的过程, 目的是让纯函数更纯，每次接受一个参数，松散解耦")]),t._v(" "),a("h3",{attrs:{id:"参考文献-9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文献-9"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://lamphc.github.io/fe-up/#/JavaScript/functional_programming",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://lamphc.github.io/fe-up/#/JavaScript/functional_programming"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2017/02/fp-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.ruanyifeng.com/blog/2017/02/fp-tutorial.html"),a("OutboundLink")],1),t._v("  (推荐看这个)")])]),t._v(" "),a("h1",{attrs:{id:"同步异步相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同步异步相关"}},[t._v("#")]),t._v(" 同步异步相关")]),t._v(" "),a("h2",{attrs:{id:"问题-为什么js是单线程的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题-为什么js是单线程的"}},[t._v("#")]),t._v(" 问题: 为什么JS是单线程的?")]),t._v(" "),a("h3",{attrs:{id:"目标-19"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标-19"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("ul",[a("li",[t._v("理解并说出JS为什么是单线程的?")])]),t._v(" "),a("h3",{attrs:{id:"讲解-20"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲解-20"}},[t._v("#")]),t._v(" 讲解")]),t._v(" "),a("ol",[a("li",[t._v("浏览器"),a("strong",[t._v("软件")]),t._v("启动, 对应4个"),a("strong",[t._v("进程")])]),t._v(" "),a("li",[t._v("渲染进程中有个"),a("strong",[t._v("JS引擎线程")]),t._v("(一个C++程序), 解析执行JS代码,也称JS主线程")]),t._v(" "),a("li",[t._v("而JS为避免复杂性, 诞生就设计成单线程, 同一刻只能执行某行代码")]),t._v(" "),a("li",[t._v("例如: 1个线程往DOM上添内容, 另1个线程要删除此DOM节点, 单线程就能避免冲突!")])]),t._v(" "),a("h3",{attrs:{id:"小结-20"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-20"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("blockquote",[a("p",[t._v("逐字稿, 可以理解着梳理")])]),t._v(" "),a("p",[t._v("浏览器内有JS引擎线程, 它某刻只能执行某行代码, 在设计之初就是单线程, 是为了避免2个线程同时操作DOM代码产生冲突, 减低复杂性.")]),t._v(" "),a("h3",{attrs:{id:"参考文献-10"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文献-10"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"http://t.zoukankan.com/ly1368489670-p-12834431.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://t.zoukankan.com/ly1368489670-p-12834431.html"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://t.zoukankan.com/ygunoil-p-15156671.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://t.zoukankan.com/ygunoil-p-15156671.html"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2014/10/event-loop.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.ruanyifeng.com/blog/2014/10/event-loop.html"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("你不知道的JavaScript")])]),t._v(" "),a("h2",{attrs:{id:"问题-什么是同步和异步代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题-什么是同步和异步代码"}},[t._v("#")]),t._v(" 问题: 什么是同步和异步代码?")]),t._v(" "),a("h3",{attrs:{id:"目标-20"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标-20"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("ul",[a("li",[t._v("理解并说出, 同步以及异步代码区别")])]),t._v(" "),a("h3",{attrs:{id:"讲解-21"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲解-21"}},[t._v("#")]),t._v(" 讲解")]),t._v(" "),a("ol",[a("li",[t._v("同步代码: "),a("strong",[t._v("立即")]),t._v("放入JS引擎(JS主线程)执行, 并"),a("strong",[t._v("原地等待")]),t._v("结果")]),t._v(" "),a("li",[t._v("异步代码: 先放入宿主环境(浏览器/Node), 不必原地等待结果, 并"),a("strong",[t._v("不阻塞")]),t._v("主线程继续往下执行, 异步结果在"),a("strong",[t._v("将来执行")]),t._v("(一般都有回调函数)")]),t._v(" "),a("li",[t._v("比如异步代码有:")])]),t._v(" "),a("ul",[a("li",[t._v("setTimeout (一次性定时器)")]),t._v(" "),a("li",[t._v("setInterval  (定时器)")]),t._v(" "),a("li",[t._v("Ajax/Fetch")]),t._v(" "),a("li",[t._v("事件绑定")]),t._v(" "),a("li",[t._v("....")]),t._v(" "),a("li",[t._v("Promise本身是同步的, 但是then和catch是异步的")])]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("代码体现")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印结果: 1, 3, 2")]),t._v("\n")])])]),a("h3",{attrs:{id:"小结-21"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-21"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("blockquote",[a("p",[t._v("逐字稿, 可以理解着梳理")])]),t._v(" "),a("p",[t._v("同步代码立即执行, 原地等待结果后继续下一行\n异步代码交给宿主环境执行, 不在原地等待结果, 不阻塞向下执行其他代码")]),t._v(" "),a("h3",{attrs:{id:"参考文献-11"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文献-11"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),a("ol",[a("li",[t._v("你不知道的JavaScript")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/weixin_46022934/article/details/121322193",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://blog.csdn.net/weixin_46022934/article/details/121322193"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("mdn: "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/setInterval",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://developer.mozilla.org/zh-CN/docs/Web/API/setInterval"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"问题-什么是事件循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题-什么是事件循环"}},[t._v("#")]),t._v(" 问题: 什么是事件循环?")]),t._v(" "),a("h3",{attrs:{id:"目标-21"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标-21"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("ul",[a("li",[t._v("掌握理解和说出, 事件循环概念并帮助自己理解代码执行顺序")]),t._v(" "),a("li",[t._v("想考察JS如何执行异步代码的机制")]),t._v(" "),a("li",[t._v("如果考什么是任务队列, 也可以回答这个")])]),t._v(" "),a("h3",{attrs:{id:"讲解-22"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲解-22"}},[t._v("#")]),t._v(" 讲解")]),t._v(" "),a("blockquote",[a("p",[t._v("EventLoop是事件循环的英文描述")])]),t._v(" "),a("ol",[a("li",[t._v("事件循环是JS处理执行异步代码的一种线程和内存调度机制")]),t._v(" "),a("li",[t._v("JS引擎并不是独立运行的，它运行在宿主环境中")]),t._v(" "),a("li",[t._v("JS解析执行到异步代码时, 会交给宿主环境执行并携带一个"),a("strong",[t._v("回调函数")])]),t._v(" "),a("li",[t._v("宿主环境执行后, 把回调函数推入到"),a("strong",[t._v("任务队列")]),t._v("中排队等待")]),t._v(" "),a("li",[t._v("等待JS引擎(主线程执行栈)空闲后, 调用"),a("strong",[t._v("任务队列")]),t._v("中回调函数执行, 再次空间后再调用执行, 循环的过程就叫事件循环")]),t._v(" "),a("li",[t._v("代码")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印结果: 1, 3, 2")]),t._v("\n")])])]),a("ol",{attrs:{start:"7"}},[a("li",[t._v("图示1:\n"),a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2022/png/22014993/1657202702725-aedebc2d-d9b5-4c71-a017-b7f2159685cd.png#clientId=u4afc02fb-6a9b-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=452&id=ubc9b18f0&name=image.png&originHeight=565&originWidth=1041&originalType=binary&ratio=1&rotation=0&showTitle=false&size=103091&status=done&style=none&taskId=u6e9df897-e6bd-4493-a327-d7aeb743351&title=&width=832.8",alt:"image.png"}})]),t._v(" "),a("li",[t._v("图示2:\n"),a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2022/png/22014993/1657202729348-b9fa99f6-bbec-420d-8fcf-04d8c1b99168.png#clientId=u4afc02fb-6a9b-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=411&id=u07b33959&name=image.png&originHeight=710&originWidth=881&originalType=binary&ratio=1&rotation=0&showTitle=false&size=166102&status=done&style=none&taskId=u5c9a97e0-bc28-4630-942b-0eb28a65ac0&title=&width=509.8000183105469",alt:"image.png"}})])]),t._v(" "),a("h3",{attrs:{id:"小结-22"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-22"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("blockquote",[a("p",[t._v("逐字稿, 可以理解着梳理, 回答时脑子里可以想图之间关系")])]),t._v(" "),a("p",[t._v("事件循环是JS执行异步代码的一种机制, 执行栈遇到异步代码交给宿主环境, 宿主环境执行异步代码后有结果, 把回调函数推入任务队列排队, 等待执行栈空闲往复调用任务队列里回调函数执行的过程就是事件循环")]),t._v(" "),a("h3",{attrs:{id:"参考文献-12"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文献-12"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"http://fanyouf.gitee.io/interview/javascript/event_loop",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://fanyouf.gitee.io/interview/javascript/event_loop"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2014/10/event-loop.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.ruanyifeng.com/blog/2014/10/event-loop.html"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("你不知道的JavaScript")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://lamphc.github.io/fe-up/#/JavaScript/event_loop",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://lamphc.github.io/fe-up/#/JavaScript/event_loop"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("面试宝典V4.0 (2022-01)")]),t._v(" "),a("li",[t._v("执行栈:所有同步任务都在主线程上执行，形成一个执行栈")])]),t._v(" "),a("h2",{attrs:{id:"问题-什么是宏任务和微任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题-什么是宏任务和微任务"}},[t._v("#")]),t._v(" 问题: 什么是宏任务和微任务?")]),t._v(" "),a("h3",{attrs:{id:"目标-22"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标-22"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("ul",[a("li",[t._v("掌握说出和区别, 宏任务和微任务")]),t._v(" "),a("li",[t._v("掌握宏任务队列和微任务队列执行时机")])]),t._v(" "),a("h3",{attrs:{id:"讲解-23"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲解-23"}},[t._v("#")]),t._v(" 讲解")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("JS把异步代码分为宏任务和微任务, 在ES6有了Promise, JS引擎也能发起异步任务了")])]),t._v(" "),a("li",[a("p",[t._v("宏任务: 宿主环境(浏览器/Node)发起的任务叫宏任务"),a("br"),t._v("\n| 任务（代码） | 宏任务 | 环境 |\n| --- | --- | --- |\n| script | 宏任务 | 浏览器 |\n| 事件 | 宏任务 | 浏览器 |\n| 网络请求（Ajax/Fetch） | 宏任务 | 浏览器 |\n| setTimeout() 一次性定时器/setInterval() 定时器 | 宏任务 | 浏览器 |")])]),t._v(" "),a("li",[a("p",[t._v("微任务: JS引擎发起的任务叫微任务(Promise)")])])]),t._v(" "),a("blockquote",[a("p",[t._v("Promise本身同步, then/catch的回调函数是异步的")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("任务（代码）")]),t._v(" "),a("th",[t._v("微任务")]),t._v(" "),a("th",[t._v("环境")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Promise")]),t._v(" "),a("td",[t._v("微任务")]),t._v(" "),a("td",[t._v("JS引擎")])])])]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("首先一个JS脚本(script)本身对于浏览器而言就是一个宏任务，也是第一个宏任务.")]),t._v(" "),a("li",[t._v("逐行执行其中的代码可能有3种：同步代码、微任务的异步代码（promise等）、宏任务的异步代码(settimeout、setinterval等)")])]),t._v(" "),a("ul",[a("li",[t._v("遇到同步放入执行栈立即执行")]),t._v(" "),a("li",[t._v("遇到微任务代码, Promise内立即执行, then/catch的回调函数放入当前(宏任务范围内的微任务列表中排队)")]),t._v(" "),a("li",[t._v("遇到宏任务代码, 交给宿主环境, 并等待执行后, 把回调函数放入任务队列中排队")])]),t._v(" "),a("ol",{attrs:{start:"6"}},[a("li",[t._v("执行栈执行所有同步代码空闲后, 先清空当前宏任务范围内的微任务列表中回调函数, 再执行下一个宏任务")]),t._v(" "),a("li",[t._v("图示1: 宏任务队列和微任务队列关系\n"),a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2022/png/22014993/1657202799537-d6c87eb9-7c47-4319-a84d-077f2c336c81.png#clientId=u4afc02fb-6a9b-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=497&id=u2e4bc3f0&name=image.png&originHeight=886&originWidth=902&originalType=binary&ratio=1&rotation=0&showTitle=false&size=136475&status=done&style=none&taskId=u83b92481-b31e-4255-89b6-7e8628a54d0&title=&width=506",alt:"image.png"}})]),t._v(" "),a("li",[t._v("图示2: 宏任务和微任务执行顺序\n"),a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2022/png/22014993/1657202825393-e12079ee-ba63-4fa6-9342-c4bda3030592.png#clientId=u4afc02fb-6a9b-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=234&id=u611a193f&name=image.png&originHeight=292&originWidth=1021&originalType=binary&ratio=1&rotation=0&showTitle=false&size=49728&status=done&style=none&taskId=u46301fd2-f966-418e-be94-fbd280b888c&title=&width=816.8",alt:"image.png"}})]),t._v(" "),a("li",[t._v("代码示例: 请按照上面理解后的回答下面打印顺序")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 答案: 13842567")]),t._v("\n")])])]),a("h3",{attrs:{id:"小结-23"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-23"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("blockquote",[a("p",[t._v("逐字稿, 可以理解着梳理")])]),t._v(" "),a("p",[t._v("方面1: 区分")]),t._v(" "),a("ul",[a("li",[t._v("宏任务: 宿主环境(浏览器/Node)发起的任务叫宏任务")]),t._v(" "),a("li",[t._v("微任务: JS引擎发起的任务叫微任务(Promise)")])]),t._v(" "),a("p",[t._v("方面2: 执行顺序\nJS在执行代码的时候, 会遇到同步代码, 微任务代码, 宏任务代码")]),t._v(" "),a("ul",[a("li",[t._v("遇到同步按行执行")]),t._v(" "),a("li",[t._v("遇到微任务代码也是交给JS引擎执行, 但是回调函数在微任务队列中排队等待")]),t._v(" "),a("li",[t._v("遇到宏任务代码, 交给宿主环境(有结果进入任务队列)")]),t._v(" "),a("li",[t._v("等待执行栈空闲, 清空微任务队列, 再执行下一个宏任务(回到1)")])]),t._v(" "),a("p",[t._v("执行顺序, 第一个script宏任务->所有同步代码->微任务队列->下一个宏任务(回到开始继续)")]),t._v(" "),a("h3",{attrs:{id:"参考文献-13"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文献-13"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),a("ol",[a("li",[t._v("极客时间->重学前端")]),t._v(" "),a("li",[t._v("面试宝典V4.0 (2022-01)")]),t._v(" "),a("li",[a("a",{attrs:{href:"http://fanyouf.gitee.io/interview/javascript/event_loop.html#%E4%BA%8C%E3%80%81%E5%AE%8F%E4%BB%BB%E5%8A%A1%E4%B8%8E%E5%BE%AE%E4%BB%BB%E5%8A%A1",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://fanyouf.gitee.io/interview/javascript/event_loop.html#二、宏任务与微任务"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"问题-什么是async和await"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题-什么是async和await"}},[t._v("#")]),t._v(" 问题: 什么是async和await?")]),t._v(" "),a("h3",{attrs:{id:"目标-23"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标-23"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("ul",[a("li",[t._v("掌握和理解async和await概念")]),t._v(" "),a("li",[t._v("掌握并编写async和await的代码")])]),t._v(" "),a("h3",{attrs:{id:"讲解-24"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲解-24"}},[t._v("#")]),t._v(" 讲解")]),t._v(" "),a("ol",[a("li",[t._v("虽然Promise的then链式调用能解决回调地狱, 但是代码不便于阅读")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" pname "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" p "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("myAjax")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://ajax-api.itheima.net/api/province'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\np"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    pname "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '辽宁省'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("myAjax")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("http://ajax-api.itheima.net/api/city?pname=")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("pname"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" cname "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '辽阳市'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("myAjax")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("http://ajax-api.itheima.net/api/area?pname=")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("pname"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("&cname=")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("cname"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("ES7提出ES8标准的, async和await关键字来取代then函数, 让代码便于编写和阅读")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getListFn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" res "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("myAjax")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://ajax-api.itheima.net/api/province'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" pname "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '辽宁省'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" res2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("myAjax")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("http://ajax-api.itheima.net/api/city?pname=")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("pname"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cname "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" res2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '辽阳市'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" res3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("myAjax")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("http://ajax-api.itheima.net/api/area?pname=")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("pname"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("&cname=")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("cname"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 请求是一个个发送的")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getListFn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("await后一般配合Promise对象使用, "),a("strong",[t._v("等待")]),t._v("成功结果原地")]),t._v(" "),a("li",[t._v("await只能用在"),a("strong",[t._v("async函数内")]),t._v(", 它能暂停代码, 但不会阻塞"),a("strong",[t._v("外面")]),t._v("主线程执行")]),t._v(" "),a("li",[t._v("async函数返回Promise对象, 结果是函数内return的结果")]),t._v(" "),a("li",[t._v("如果要捕获await的错误, 可以用try+catch或者.catch链式调用")])]),t._v(" "),a("h3",{attrs:{id:"小结-24"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-24"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("blockquote",[a("p",[t._v("逐字稿, 可以理解着梳理")])]),t._v(" "),a("p",[t._v("async和await关键字取代一般用于取代Promise的then函数, 在async函数内, 使用await把异步流程写成同步流程, 异步终极解决方案\n如果还能接着说↓\nawait只能用在"),a("strong",[t._v("async函数内")]),t._v(", 它能暂停代码, 但不会阻塞"),a("strong",[t._v("外面")]),t._v("主线程执行\nasync函数返回Promise对象, 结果是函数内return的结果\n如果要捕获await的错误, 可以用try+catch或者.catch链式调用")]),t._v(" "),a("h3",{attrs:{id:"参考文献-14"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文献-14"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),a("ol",[a("li",[t._v("极客时间->重学前端")]),t._v(" "),a("li",[t._v("极客时间->浏览器工作原理与实践")]),t._v(" "),a("li",[t._v("面试宝典V4.0 (2022-01)")]),t._v(" "),a("li",[t._v("mdn-async")]),t._v(" "),a("li",[t._v("es标准: "),a("a",{attrs:{href:"https://tc39.es/ecma262/#sec-async-function-objects",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://tc39.es/ecma262/#sec-async-function-objects"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2015/05/async.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.ruanyifeng.com/blog/2015/05/async.html"),a("OutboundLink")],1)])]),t._v(" "),a("h1",{attrs:{id:"浏览器相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器相关"}},[t._v("#")]),t._v(" 浏览器相关")]),t._v(" "),a("h2",{attrs:{id:"问题-什么是内存泄露"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题-什么是内存泄露"}},[t._v("#")]),t._v(" 问题: 什么是内存泄露?")]),t._v(" "),a("h3",{attrs:{id:"目标-24"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标-24"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("ul",[a("li",[t._v("了解什么是内存泄露")]),t._v(" "),a("li",[t._v("知道如何避免内存泄露")])]),t._v(" "),a("h3",{attrs:{id:"讲解-25"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲解-25"}},[t._v("#")]),t._v(" 讲解")]),t._v(" "),a("ol",[a("li",[t._v("内存泄漏, 是由于疏忽或错误, 导致不再使用的内存未被释放")])]),t._v(" "),a("ul",[a("li",[t._v("例如1: 意外的全局变量")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("intro "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我会内存泄露"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果未开启严格模式, 则this指向window对象, 则intro属性变为全局对象里一个属性一直占用内存")]),t._v("\n")])])]),a("ul",[a("li",[t._v("例如2: 定时器或计时器或事件监听, 不销毁会导致内存泄露")])]),t._v(" "),a("blockquote",[a("p",[t._v("比如在递归函数里用addEventListener给一个标签绑定事件几千次")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setInterval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" f "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setInterval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你好"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 每隔1秒都创建了1个计时器 - 而且内部f计时器从未销毁过")]),t._v("\n")])])]),a("ul",[a("li",[t._v("图示: (蓝色表示分配的内存)\n"),a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2022/png/22014993/1657202873317-20620d97-7300-4778-a77d-6908414fa397.png#clientId=u4afc02fb-6a9b-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=463&id=u834c2c31&name=image.png&originHeight=579&originWidth=1030&originalType=binary&ratio=1&rotation=0&showTitle=false&size=85279&status=done&style=none&taskId=u039872a1-4591-4ca5-9423-68f4f0ea828&title=&width=824",alt:"image.png"}})]),t._v(" "),a("li",[t._v("例3: 闭包内, 引用外层函数的变量, 导致外层函数执行后无法被回收, 也会在内存中一直存在")]),t._v(" "),a("li",[t._v("例4: 深拷贝对象时, 对象互相引用")])]),t._v(" "),a("blockquote",[a("p",[t._v("详情可看此视频: "),a("a",{attrs:{href:"https://www.bilibili.com/video/BV1jv411W76k?p=4&vd_source=91b7751815160bf9e0d92453461c08ba",target:"_blank",rel:"noopener noreferrer"}},[t._v("深拷贝对象互相引用"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"小结-25"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-25"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("blockquote",[a("p",[t._v("逐字稿, 可以理解着梳理")])]),t._v(" "),a("p",[t._v("内存泄漏, 是由于疏忽或错误, 导致不再使用的内存未释放, 看似没什么问题, 但是等占用的内存把软件可用内存堆满时就会产生内存溢出\n内存溢出, 导致执行栈空间爆满, 导致JS脚本无法继续执行, 在浏览器报错")]),t._v(" "),a("h3",{attrs:{id:"参考文献-15"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文献-15"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),a("ol",[a("li",[t._v("面试宝典V4.0 (2022-01)")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2017/04/memory-leak.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.ruanyifeng.com/blog/2017/04/memory-leak.html"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("极客时间->浏览器工作原理与实践")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/zyb18507175502/article/details/124120491",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://blog.csdn.net/zyb18507175502/article/details/124120491"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"问题-为什么0-1加0-2不等于0-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题-为什么0-1加0-2不等于0-3"}},[t._v("#")]),t._v(" 问题: 为什么0.1加0.2不等于0.3?")]),t._v(" "),a("h3",{attrs:{id:"目标-25"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标-25"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("ul",[a("li",[t._v("了解计算机是如何运行小数加减的")])]),t._v(" "),a("h3",{attrs:{id:"讲解-26"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲解-26"}},[t._v("#")]),t._v(" 讲解")]),t._v(" "),a("ol",[a("li",[t._v("试着回答这句代码结果")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 答案是: false")]),t._v("\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("无论什么语言都运行在计算机上, 而计算机计算数字用的是二进制(因为电脑电路只有高低电平1和0之分)")]),t._v(" "),a("li",[t._v("而64位系统计算机中, 用64位二进制表示一个数字最大范围, 于是规定:  1位符号位，11位指数位，52位小数位")]),t._v(" "),a("li",[t._v("当把小数转成二进制0和1以后, 会无限循环,但是小数位只能有52位, 下面是多写了几位")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00011001100110011001100110011001100110011001100110011010")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("（无限循环）\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.001100110011001100110011001100110011001100110011001101")]),t._v("（无限循环）\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 计算机进行加法运算后")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0100110011001100110011001100110011001100110011001100111")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("转回"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("进制结果为")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.30000000000000004")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ol",{attrs:{start:"5"}},[a("li",[t._v("所以转成二进制计算后再转回来造成了进度误差, 结果不准确")]),t._v(" "),a("li",[t._v("正确的比较小数的方式是检查等式左右两边差的绝对值是否小于最小精度")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("abs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" Number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("EPSILON")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"小结-26"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-26"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("blockquote",[a("p",[t._v("逐字稿, 可以理解着梳理")])]),t._v(" "),a("p",[t._v("计算机计算小数时, 需要转成二进制计算, 转换后的数字是无限循环, 但是只能保留52位小数位进度. 计算后在转回10进制标识造成了精度丢失, 正确比较应该用差的绝对值是否小于JS最小精度")]),t._v(" "),a("h3",{attrs:{id:"参考文献-16"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文献-16"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"http://fanyouf.gitee.io/interview/javascript/loss_accuracy.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://fanyouf.gitee.io/interview/javascript/loss_accuracy.html"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("你不知道的JavaScript")]),t._v(" "),a("li",[t._v("极客时间-重学前端")]),t._v(" "),a("li",[t._v("进制转换: "),a("a",{attrs:{href:"https://tool.oschina.net/hexconvert/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://tool.oschina.net/hexconvert/"),a("OutboundLink")],1)])]),t._v(" "),a("h1",{attrs:{id:"优化相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优化相关"}},[t._v("#")]),t._v(" 优化相关")]),t._v(" "),a("h2",{attrs:{id:"问题-什么是防抖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题-什么是防抖"}},[t._v("#")]),t._v(" 问题: 什么是防抖?")]),t._v(" "),a("h3",{attrs:{id:"目标-26"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标-26"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("ul",[a("li",[t._v("能够说出它的概念和使用场景")])]),t._v(" "),a("h3",{attrs:{id:"讲解-27"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲解-27"}},[t._v("#")]),t._v(" 讲解")]),t._v(" "),a("ol",[a("li",[t._v("本质就是降低代码执行的频率, 提升用户的体验")]),t._v(" "),a("li",[t._v("n 秒后在执行该事件，若在 n 秒内被重复触发，则重新计时")]),t._v(" "),a("li",[t._v("常用在搜索框, 降低搜索触发频率, 只显示用户"),a("strong",[t._v("最后一次")]),t._v("要搜索的结果")])]),t._v(" "),a("h3",{attrs:{id:"小结-27"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-27"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("blockquote",[a("p",[t._v("逐字稿, 可以理解着梳理")])]),t._v(" "),a("p",[t._v("防抖是为了降低代码执行频率,  n秒后执行逻辑代码, 如果n秒内被触发, 则重新计时, 执行最后一次, 常用在搜索框中")]),t._v(" "),a("h3",{attrs:{id:"参考文献-17"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文献-17"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),a("ol",[a("li",[t._v("前端面试宝典V4.0--2022.1.pdf")]),t._v(" "),a("li",[a("a",{attrs:{href:"http://fanyouf.gitee.io/interview/javascript/debounce_throttle.html#%E4%B8%80%E3%80%81%E6%98%AF%E4%BB%80%E4%B9%88",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://fanyouf.gitee.io/interview/javascript/debounce_throttle.html#一、是什么"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.cn/post/6844904121326108686",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://juejin.cn/post/6844904121326108686"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("旭哥视频: "),a("a",{attrs:{href:"https://www.bilibili.com/video/BV1y3411r7Pr?spm_id_from=333.999.0.0&vd_source=91b7751815160bf9e0d92453461c08ba",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.bilibili.com/video/BV1y3411r7Pr?spm_id_from=333.999.0.0&vd_source=91b7751815160bf9e0d92453461c08ba"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"问题-什么是节流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题-什么是节流"}},[t._v("#")]),t._v(" 问题: 什么是节流?")]),t._v(" "),a("h3",{attrs:{id:"目标-27"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标-27"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("ul",[a("li",[t._v("能够说出它的概念和使用场景")])]),t._v(" "),a("h3",{attrs:{id:"讲解-28"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲解-28"}},[t._v("#")]),t._v(" 讲解")]),t._v(" "),a("ol",[a("li",[t._v("本质就是降低代码执行的频率, 提升用户的体验")]),t._v(" "),a("li",[t._v("n 秒内只运行一次，若在 n 秒内重复触发，也只执行一次, 或叫间隔时间执行")]),t._v(" "),a("li",[t._v("常用在滚动加载更多, 搜索框其实也可以(看需求, 如果我中间也想执行搜索逻辑而不是最后一次)")])]),t._v(" "),a("h3",{attrs:{id:"小结-28"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-28"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("blockquote",[a("p",[t._v("逐字稿, 可以理解着梳理")])]),t._v(" "),a("p",[t._v("节流是为了降低代码执行频率,  n 秒内只运行一次，若在 n 秒内重复触发，也只执行一次,  常用在滚动加载更多")]),t._v(" "),a("h3",{attrs:{id:"参考文献-18"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文献-18"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),a("ol",[a("li",[t._v("前端面试宝典V4.0--2022.1.pdf")]),t._v(" "),a("li",[a("a",{attrs:{href:"http://fanyouf.gitee.io/interview/javascript/debounce_throttle.html#%E4%B8%80%E3%80%81%E6%98%AF%E4%BB%80%E4%B9%88",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://fanyouf.gitee.io/interview/javascript/debounce_throttle.html#一、是什么"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.cn/post/6844904121326108686",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://juejin.cn/post/6844904121326108686"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("旭哥视频: "),a("a",{attrs:{href:"https://www.bilibili.com/video/BV1y3411r7Pr?spm_id_from=333.999.0.0&vd_source=91b7751815160bf9e0d92453461c08ba",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.bilibili.com/video/BV1y3411r7Pr?spm_id_from=333.999.0.0&vd_source=91b7751815160bf9e0d92453461c08ba"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"问题-请实现防抖函数封装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题-请实现防抖函数封装"}},[t._v("#")]),t._v(" 问题: 请实现防抖函数封装?")]),t._v(" "),a("h3",{attrs:{id:"目标-28"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标-28"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("ul",[a("li",[t._v("能够写出防抖函数的封装")])]),t._v(" "),a("h3",{attrs:{id:"讲解-29"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲解-29"}},[t._v("#")]),t._v(" 讲解")]),t._v(" "),a("ol",[a("li",[t._v("参考代码如下: 先读懂, 再仿写5-10遍")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("debounce")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" timer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 真正事件处理函数, this: 事件触发者(input)")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 清空上一个定时器")]),t._v("\n        timer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重新创建定时器并重新定时(一定用箭头函数, this得指向事件处理函数的事件源标签)")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 事件触发者, 替换到具体逻辑this值上")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用")]),t._v("\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#ipt'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"input"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("debounce")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"小结-29"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-29"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("blockquote",[a("p",[t._v("逐字稿, 可以理解着梳理")])]),t._v(" "),a("p",[t._v("可以口述实现流程的思路:\n封装函数, 并返回一个真正执行的事件处理函数, 这样做的目的是让外部传入具体逻辑代码函数进来给fn, 然后在事件处理函数中先清除定时器并创建新的, 而定时器到达时, 回调fn执行即可并别忘了把this执行带回去")]),t._v(" "),a("h3",{attrs:{id:"参考文献-19"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文献-19"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),a("ol",[a("li",[t._v("前端面试宝典V4.0--2022.1.pdf")]),t._v(" "),a("li",[a("a",{attrs:{href:"http://fanyouf.gitee.io/interview/javascript/debounce_throttle.html#%E4%B8%80%E3%80%81%E6%98%AF%E4%BB%80%E4%B9%88",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://fanyouf.gitee.io/interview/javascript/debounce_throttle.html#一、是什么"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.cn/post/6844904121326108686",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://juejin.cn/post/6844904121326108686"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("旭哥视频: "),a("a",{attrs:{href:"https://www.bilibili.com/video/BV1y3411r7Pr?spm_id_from=333.999.0.0&vd_source=91b7751815160bf9e0d92453461c08ba",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.bilibili.com/video/BV1y3411r7Pr?spm_id_from=333.999.0.0&vd_source=91b7751815160bf9e0d92453461c08ba"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"问题-请实现节流函数封装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题-请实现节流函数封装"}},[t._v("#")]),t._v(" 问题: 请实现节流函数封装?")]),t._v(" "),a("h3",{attrs:{id:"目标-29"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标-29"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("ul",[a("li",[t._v("掌握节流函数的封装")])]),t._v(" "),a("h3",{attrs:{id:"讲解-30"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲解-30"}},[t._v("#")]),t._v(" 讲解")]),t._v(" "),a("ol",[a("li",[t._v("参考代码如下, 先读懂, 再仿写5-10遍")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("throttle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 真正的事件处理函数 (this: 事件源)")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// fn.t就是给fn对象扩展个自定义属性保存定时器(也可以像防抖一样写在上面2个函数之间)")]),t._v("\n        fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 确保上面函数中this关键字是事件源 (fn()调用, 上面this就变成了window不对了)")]),t._v("\n            fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 置空, 让事件再次触发的时候, 重新创建一个定时器")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scroll"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("throttle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("scrollTop")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("documentElement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scrollHeight "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("documentElement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clientHeight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"小结-30"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-30"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("blockquote",[a("p",[t._v("逐字稿, 可以理解着梳理")])]),t._v(" "),a("p",[t._v("可以口述实现流程的思路:\n封装函数, 并返回一个真正执行的事件处理函数, 这样做的目的是让外部传入具体逻辑代码函数进来给fn, 然后在事件处理函数中先判断属性有值(证明有个定时器在倒计时)则提前return拦住, 否则进创建, 并在倒计时结束后把属性值置空, 下次事件触发再绑定新的")]),t._v(" "),a("h3",{attrs:{id:"参考文献-20"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文献-20"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),a("ol",[a("li",[t._v("前端面试宝典V4.0--2022.1.pdf")]),t._v(" "),a("li",[a("a",{attrs:{href:"http://fanyouf.gitee.io/interview/javascript/debounce_throttle.html#%E4%B8%80%E3%80%81%E6%98%AF%E4%BB%80%E4%B9%88",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://fanyouf.gitee.io/interview/javascript/debounce_throttle.html#一、是什么"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.cn/post/6844904121326108686",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://juejin.cn/post/6844904121326108686"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("旭哥视频: "),a("a",{attrs:{href:"https://www.bilibili.com/video/BV1y3411r7Pr?spm_id_from=333.999.0.0&vd_source=91b7751815160bf9e0d92453461c08ba",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.bilibili.com/video/BV1y3411r7Pr?spm_id_from=333.999.0.0&vd_source=91b7751815160bf9e0d92453461c08ba"),a("OutboundLink")],1)])]),t._v(" "),a("h1",{attrs:{id:"应用相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用相关"}},[t._v("#")]),t._v(" 应用相关")]),t._v(" "),a("h2",{attrs:{id:"问题-如何实现上拉加载更多"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题-如何实现上拉加载更多"}},[t._v("#")]),t._v(" 问题: 如何实现上拉加载更多?")]),t._v(" "),a("h3",{attrs:{id:"目标-30"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标-30"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("ul",[a("li",[t._v("了解并说出实现上拉加载更多思路")])]),t._v(" "),a("h3",{attrs:{id:"讲解-31"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲解-31"}},[t._v("#")]),t._v(" 讲解")]),t._v(" "),a("ol",[a("li",[t._v("本质: 在滚动网页时, 可滚动范围将要/正好露底时, 加载额外数据的动作就叫上拉加载更多")]),t._v(" "),a("li",[t._v("检测浏览器滚动事件, 并在浏览器卷入距离 >= 获取浏览器可滚动高度 - 浏览器可视高度执行加载更多数据代码")]),t._v(" "),a("li",[t._v("公式:   scrollTop >= scrollHeight -  clientHeight")]),t._v(" "),a("li",[t._v("示例代码")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" clientHeight  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("documentElement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clientHeight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//浏览器高度")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" scrollHeight "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scrollHeight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" scrollTop "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("documentElement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scrollTop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" distance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//距离视窗还用50的时候，开始触发；")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("scrollTop "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("scrollHeight "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" clientHeight "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" distance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"开始加载数据"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"小结-31"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-31"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("blockquote",[a("p",[t._v("逐字稿, 可以理解着梳理")])]),t._v(" "),a("p",[t._v("检测网页滚动事件, 当卷入距离大于滚动高度-视口高度时, 就判定为滚动触底, 执行加载更多数据的代码")]),t._v(" "),a("h3",{attrs:{id:"参考文献-21"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文献-21"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"http://fanyouf.gitee.io/interview/javascript/pull_up_loading_pull_down_refresh.html#%E4%B8%80%E3%80%81%E5%89%8D%E8%A8%80",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://fanyouf.gitee.io/interview/javascript/pull_up_loading_pull_down_refresh.html#一、前言"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"问题-如何实现下拉刷新列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题-如何实现下拉刷新列表"}},[t._v("#")]),t._v(" 问题: 如何实现下拉刷新列表?")]),t._v(" "),a("h3",{attrs:{id:"目标-31"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标-31"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("ul",[a("li",[t._v("了解并说出实现下拉刷新思路")])]),t._v(" "),a("h3",{attrs:{id:"讲解-32"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲解-32"}},[t._v("#")]),t._v(" 讲解")]),t._v(" "),a("ol",[a("li",[t._v("本质: 页面本身置于顶部时，用户下拉时需要触发的动作")]),t._v(" "),a("li",[t._v("标签本身不能随着手拖动而变化, 需要用代码来实现")]),t._v(" "),a("li",[t._v("监听touchstart事件, 记录用户手指开始坐标")]),t._v(" "),a("li",[t._v("监听touchmove事件, 记录用户手指拖拽坐标, 并超过自己设定的阀值后, 修改标签的translateY属性, 让标签位移有个效果(可设置css过渡动画)")]),t._v(" "),a("li",[t._v("监听touchend事件, 手指离开后, 直接让元素translateY属性回到0, 并执行刷新列表的代码上")])]),t._v(" "),a("h3",{attrs:{id:"小结-32"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-32"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("blockquote",[a("p",[t._v("逐字稿, 可以理解着梳理")])]),t._v(" "),a("p",[t._v("标签在顶部手往下拉刷新列表数据, 需要借助touchstart记录开始坐标, touchmove记录移动坐标, 算出偏移量, 用translateY属性修改标签位移效果, 在touchend时, 让标签translateY回到0, 并执行刷新列表代码")]),t._v(" "),a("h3",{attrs:{id:"参考文献-22"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文献-22"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"http://fanyouf.gitee.io/interview/javascript/pull_up_loading_pull_down_refresh.html#%E4%B8%80%E3%80%81%E5%89%8D%E8%A8%80",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://fanyouf.gitee.io/interview/javascript/pull_up_loading_pull_down_refresh.html#一、前言"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"问题-如何实现大文件上传"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题-如何实现大文件上传"}},[t._v("#")]),t._v(" 问题: 如何实现大文件上传?")]),t._v(" "),a("h3",{attrs:{id:"目标-32"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标-32"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("ul",[a("li",[t._v("了解大文件上传的过程")])]),t._v(" "),a("h3",{attrs:{id:"讲解-33"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲解-33"}},[t._v("#")]),t._v(" 讲解")]),t._v(" "),a("ol",[a("li",[t._v("可以使用分片上传, 前端获取到任意文件, 使用FileReader来把文件读成base64字符串")]),t._v(" "),a("li",[t._v("然后对字符串进行分割, 分多次上传到同一个接口地址, 让后端把多次的内容合并")])]),t._v(" "),a("h3",{attrs:{id:"小结-33"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-33"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("blockquote",[a("p",[t._v("逐字稿, 可以理解着梳理")])]),t._v(" "),a("p",[t._v("把文件读成base64字符串,按照规律截取多个字符串, 分多次请求某个接口, 让后端合并拼接即可")]),t._v(" "),a("h3",{attrs:{id:"参考文献-23"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文献-23"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"http://fanyouf.gitee.io/interview/javascript/continue_to_upload.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://fanyouf.gitee.io/interview/javascript/continue_to_upload.html"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=e.exports}}]);